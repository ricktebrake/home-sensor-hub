name: Deploy plant-status-api on GKE

on:
  push:
    branches: [master]
    paths:
      - plant-status-api/**
  pull_request:
    branches: [master]

  workflow_dispatch:

env:
  PROJECT_ID: home-sensor-hub
  GAR_LOCATION: europe-west1 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: home-sensor-hub-cluster   # TODO: update to cluster name
  GKE_ZONE: europe-west1   # TODO: update to cluster zone
  DEPLOYMENT_NAME: plant-status-api-deployment # TODO: update to deployment name
  REPOSITORY: container-repository # TODO: update to Artifact Registry docker repository
  IMAGE: plant-status-api

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./plant-status-api
    steps:
      - uses: actions/checkout@v2

      - name: Maven build
        run: ./mvnw package -Pnative -Dquarkus.native.container-build=true

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/588483809961/locations/global/workloadIdentityPools/github2/providers/github-provider'
          service_account: 'github@home-sensor-hub.iam.gserviceaccount.com'


      - name: Docker configuration
        run: |-
          echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev
      # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0.4.0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Build
        run: |-
          docker build \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            -f src/main/docker/Dockerfile.native

      - name: Publish
        run: |-
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: Deploy
        run: |-
          # replacing the image name in the k8s template
          ./kustomize edit set image $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide